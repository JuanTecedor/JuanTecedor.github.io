---
import Icon from './Icon.astro';
import type { iconPaths } from '../icons/IconPaths';

const textLinks: {label: string; href: string }[] = [
    { label: 'Home', href: '/' },
    { label: 'Blog', href: '/blog/' },
    { label: 'Photography', href: '/photography/' },
    { label: 'Projects', href: '/projects/' },
];

const iconLinks: { label: string; href: string; icon: keyof typeof iconPaths }[] = [
	{ label: 'GitHub', href: 'https://github.com/JuanTecedor', icon: 'github-logo' },
	{ label: 'Linkedin', href: 'https://www.linkedin.com/in/juan-t/', icon: 'linkedin-logo' },
];
---

<nav>
    <div class="menu-header">
        <a href="/" class="site-title">
            <Icon icon="terminal-window" color="var(--accent-regular)" size="1.5em" gradient />
            Juan Tecedor
        </a>
    </div>
    <div id="menu-content">
        <ul class="nav-items">
            {
                textLinks.map(({ label, href }) => (
                    <li>
                        <a
                            aria-current={Astro.url.pathname === href}
                            class:list={[
                                "link",
                                {
                                    active: Astro.url.pathname === href || (href !== "/" && Astro.url.pathname.startsWith(href)),
                                }
                            ]}
                            href={href}
                        >
                            {label}
                        </a>
                    </li>
                ))
            }
        </ul>
    </div>
    <div class="menu-footer">
        <div class="socials">
            {
                iconLinks.map(({ href, icon, label }) => (
                    <a href={href} class="social">
                        <span class="sr-only">{label}</span>
                        <Icon icon={icon} />
                    </a>
                ))
            }
        </div>
    </div>
</nav>

<style>
    nav {
        display: grid;
        grid-template-columns: 1fr auto 1fr;
        align-items: center;
        font-weight: 500;
        margin: 3.5rem;
        gap: 1rem;
    }

    .site-title {
        font-size: var(--text-lg);
    }

	.menu-header {
		display: flex;
		justify-content: space-between;
		gap: 0.5rem;
		padding: 0;
	}

	.menu-content {
		position: absolute;
		left: 0;
		right: 0;
	}

	.menu-footer {
		--icon-size: var(--text-xl);
		--icon-padding: 0.375rem;
		display: flex;
		justify-content: space-between;
        justify-self: flex-end;
        align-items: center;
		gap: 0.75rem;
        padding: 0;
        background-color: transparent;
        box-shadow: none;
		border-radius: 0 0 0.75rem 0.75rem;
	}

	.social {
		display: flex;
		padding: var(--icon-padding);
		text-decoration: none;
		color: var(--accent-dark);
		transition: color var(--theme-transition);
	}

	.social:hover,
	.social:focus {
		color: var(--accent-text-over);
	}

    .socials {
		display: flex;
		flex-wrap: wrap;
		gap: 0.625rem;
        justify-content: flex-end;
		font-size: var(--icon-size);
        gap: 0;
	}

    .nav-items {
        margin: 0;
        display: flex;
        flex-direction: row;
        gap: 1rem;
        border-radius: 999rem;
        border: 0;
        padding: 0.5rem 0.5625rem;
        background: radial-gradient(var(--gray-900), var(--gray-800) 150%);
        box-shadow: var(--shadow-md);
    }

    .link {
        padding: 0.5rem 1rem;
        border-radius: 999rem;
        transition:
            color var(--theme-transition),
            background-color var(--theme-transition);
    }

    .link:hover,
    .link:focus {
        color: var(--gray-100);
        background-color: var(--accent-subtle-overlay);
    }

    .link.active {
        color: var(--accent-text-over);
        background-color: var(--accent-regular);
    }
</style>